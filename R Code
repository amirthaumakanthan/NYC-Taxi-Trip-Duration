library('tidyverse')
library('ggplot2')
library('car')
library('estimatr')
library('caret')
library('dplyr')
library('lubridate')
library('readr')
library('tidyr') 
library('stringr') 
library('readr') 
library('data.table') 
library('tibble') 
library('stringr')
library('geosphere') 

#load files
train_data <- read.csv(file.choose())
test_data <- read.csv(file.choose())

#summary check
str(train_data)
head(train_data)
summary(train_data)

#missing values check 
sum(is.na(train_data))
sum(is.na(test_data))

#combine train and test
full <- bind_rows(train_data %>% mutate(dset = "train_data"), 
                  test_data %>% mutate(dset = "test_data",
                                       dropoff_datetime = NA,
                                       trip_duration = NA))
full <- full %>% mutate(dset = factor(dset))

#airports
jfk_coord <- tibble(lon = -73.778889, lat = 40.639722)
la_guardia_coord <- tibble(lon = -73.872611, lat = 40.77725)

#total distance
pick_coord <- train_data %>%
  select(pickup_longitude, pickup_latitude)

drop_coord <- train_data %>%
  select(dropoff_longitude, dropoff_latitude)

train_data$total_distance <- distCosine(pick_coord, drop_coord)
train_data$bearing = bearing(pick_coord, drop_coord)

train_data$jfk_dist_pick <- distCosine(pick_coord, jfk_coord)
train_data$jfk_dist_drop <- distCosine(drop_coord, jfk_coord)
train_data$lg_dist_pick <- distCosine(pick_coord, la_guardia_coord)
train_data$lg_dist_drop <- distCosine(drop_coord, la_guardia_coord)

train_data <- train_data %>%
  mutate(date = date(pickup_datetime),
         jfk_trip = (jfk_dist_pick < 2e3) | (jfk_dist_drop < 2e3),
         lg_trip = (lg_dist_pick < 2e3) | (lg_dist_drop < 2e3),
  )

#longer than a day trips
day_plus_trips <- train_data %>%
  filter(trip_duration > 24*3600)

nrow(day_plus_trips)

train_data <- train_data[!(train_data$trip_duration>24*3600),]

#day trips
day_trips <- train_data %>%
  filter(trip_duration < 24*3600 & trip_duration > 22*3600)

nrow(day_trips)

#shorter than a few minutes
min_trips <- train_data %>%
  filter(trip_duration < 5*60)

nrow(min_trips)

#zero distance trips
zero_dist <- train_data %>%
  filter(near(total_distance,0))

nrow(zero_dist)

train_data <- train_data[!(train_data$total_distance==0),]

#external features
weather <- read.csv(file.choose())

weather <- weather %>%
  mutate(date = dmy(date),
         rain = as.numeric(ifelse(precipitation == "T", "0.01", precipitation)),
         s_fall = as.numeric(ifelse(`snow.fall` == "T", "0.01", `snow.fall`)),
         s_depth = as.numeric(ifelse(`snow.depth` == "T", "0.01", `snow.depth`)),
         all_precip = s_fall + rain,
         has_snow = (s_fall > 0) | (s_depth > 0),
         has_rain = rain > 0,
         max_temp = `maximum.temperature`,
         min_temp = `minimum.temperature`)

foo <- weather %>%
  select(date, rain, s_fall, all_precip, has_snow, has_rain, s_depth, max_temp, min_temp)

train_data <- left_join(train_data, foo, by = "date")

#combining train and test data
#distances
pick_coord <- full %>%
  select(pickup_longitude, pickup_latitude)

drop_coord <- full %>%
  select(dropoff_longitude, dropoff_latitude)

full$total_distance <- distCosine(pick_coord, drop_coord)
full$bearing = bearing(pick_coord, drop_coord)

full$jfk_dist_pick <- distCosine(pick_coord, jfk_coord)
full$jfk_dist_drop <- distCosine(drop_coord, jfk_coord)
full$lg_dist_pick <- distCosine(pick_coord, la_guardia_coord)
full$lg_dist_drop <- distCosine(drop_coord, la_guardia_coord)

#dates
full <- full %>%
  mutate(pickup_datetime = ymd_hms(pickup_datetime),
         dropoff_datetime = ymd_hms(dropoff_datetime),
         date = date(pickup_datetime)
  )

#weather
foo <- weather %>%
  select(date, rain, s_fall, all_precip, has_snow, has_rain, s_depth, max_temp, min_temp)

full <- left_join(full, foo, by = "date")

full <- full %>%
  mutate(store_and_fwd_flag = as.integer(factor(store_and_fwd_flag)),
         vendor_id = as.integer(vendor_id),
         jfk_trip = as.integer( (jfk_dist_pick < 2e3) | (jfk_dist_drop < 2e3) ),
         lg_trip = as.integer( (lg_dist_pick < 2e3) | (lg_dist_drop < 2e3) ),
         has_rain = as.integer(has_rain),
         has_snow = as.integer(has_snow),
         pickup_datetime = ymd_hms(pickup_datetime),
         dropoff_datetime = ymd_hms(dropoff_datetime),
         passenger_count = as.integer(passenger_count),
  )

#formating of features
full$pickup_month <- month(full$pickup_datetime)
full$pickup_day <- day(full$pickup_datetime)
full$pickup_hour <- hour(full$pickup_datetime)
full$pickup_min <- minute(full$pickup_datetime)

full$dropoff_month <- month(full$dropoff_datetime)
full$dropoff_day <- day(full$dropoff_datetime)
full$dropoff_hour <- hour(full$dropoff_datetime)
full$dropoff_min <- minute(full$dropoff_datetime)

full$day_of_the_weekday <- wday(full$pickup_datetime)
full$weekend <- cut(full$day_of_the_weekday,breaks=c(0,5,7),labels= c("weekday","weekend"))

full <- full %>%
  mutate(weekend = as.integer(weekend)
  )

glimpse(full)

#putting full back into train and test
train_set <- filter(full, full$dset == 'train_data')
test_set <- filter(full, full$dset == 'test_data')

#spliting train data
sample <- sample_n(train_set, 1400000)
sample_set <- sample.int(n=nrow(sample), size = floor(.7*nrow(sample)), replace = F)
train_train <- sample[sample_set,]
train_test <- sample[-sample_set,]

#model features
fit <- lm(trip_duration ~ vendor_id + 
            passenger_count + 
            pickup_longitude + 
            pickup_latitude + 
            dropoff_longitude + 
            dropoff_latitude + 
            store_and_fwd_flag + 
            total_distance + 
            bearing + 
            jfk_dist_pick + 
            jfk_dist_drop + 
            lg_dist_pick + 
            lg_dist_drop + 
            rain + 
            s_fall + 
            s_depth +
            max_temp + 
            min_temp + 
            jfk_trip +
            lg_trip + 
            pickup_month + 
            pickup_day + 
            pickup_hour +
            pickup_min + 
            day_of_the_weekday + 
            weekend, train_train
            )

summary(fit)

prediction <- predict(fit, train_test)

data.frame( R2 = R2(prediction, train_test$trip_duration),
            RMSE = RMSE(prediction, train_test$trip_duration),
            MAE = MAE(prediction,train_test$trip_duration))

percent.errors <- abs((train_test$trip_duration-prediction)/train_test$trip_duration)*100
mean(percent.errors)

#log model
fit.log <- lm(trip_duration ~ vendor_id + 
            passenger_count + 
            pickup_longitude + 
            pickup_latitude + 
            dropoff_longitude + 
            dropoff_latitude + 
            store_and_fwd_flag + 
            total_distance + 
            bearing + 
            jfk_dist_pick + 
            jfk_dist_drop + 
            lg_dist_pick + 
            lg_dist_drop + 
            rain + 
            s_fall + 
            s_depth +
            max_temp + 
            min_temp + 
            jfk_trip +
            lg_trip + 
            pickup_month + 
            pickup_day + 
            pickup_hour +
            pickup_min + 
            day_of_the_weekday + 
            weekend, train_train
)

summary(fit.log)

prediction.log <- exp(predict(fit.log, train_test))

data.frame( R2 = R2(prediction.log, train_test$trip_duration),
            RMSE = RMSE(prediction.log, train_test$trip_duration),
            MAE = MAE(prediction.log,train_test$trip_duration))

percent.errors.log <- abs((train_test$trip_duration-prediction.log)/train_test$trip_duration)*100
mean(percent.errors.log)

#Test on actual test data

predicted.duration.log <- exp(predict(fit.log,test_set))
write.csv(predicted.duration.log, file = "Predicted Trip Duration v7.csv")
